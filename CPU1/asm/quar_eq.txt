;//////////////////////////////////////////
;//
;//	Quadratic Equation
;//
;//////////////////////////////////////////

;{/////////////////////////////////////////
;//	input coefficients
;//////////////////////////////////////////
in
in
in
pop rcx
pop rbx
pop rax
jmp main
;}/////////////////////////////////////////


;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

;{/////////////////////////////////////////
;//	linear_Equation
;//////////////////////////////////////////
linear_Equation:
cmp 0 rbx
je NoSolutions
cmp 0 rcx
je A_Lot_Of_Solutions
push 0
push rcx
push rbx
div
sub
out
end
;}/////////////////////////////////////////

;{/////////////////////////////////////////
;//	NoSolutions:
;//////////////////////////////////////////
NoSolutions:
push 777
out
end
;}/////////////////////////////////////////

;{/////////////////////////////////////////
;//	A_Lot_Of_Solutions:
;//////////////////////////////////////////
A_Lot_Of_Solutions:
push 888
out
end
;}/////////////////////////////////////////

;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

;{/////////////////////////////////////////
;//	Diskrim:
;//////////////////////////////////////////
diskrim:
push rbx
push rbx
mul
push 4
push rax
push rcx
mul
mul
sub
pop rdx
cmp 0 rdx
ja Negat_Discrim
je Discrim_Is_Zero
push rdx
out
sqrt
pop rdx
ret
;}/////////////////////////////////////////

;{/////////////////////////////////////////
;//	Negative_Discrim:
;//////////////////////////////////////////
Negat_Discrim:
push 666
out
end
;}/////////////////////////////////////////

;{/////////////////////////////////////////
;//	Discrim_Is_Zero:
;//////////////////////////////////////////
Discrim_Is_Zero:
push 0
push rbx
sub
push 2
push rax
mul
div
out
end
;}/////////////////////////////////////////

;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

;{/////////////////////////////////////////
;//	MAIN:
;//////////////////////////////////////////
main:
cmp rax 0
je linear_Equation
call diskrim

x1:
push rdx
push rbx
sub
out
push 2
push rax
mul
out
div
out
pop

x2:
push 0
push rdx
sub
push rbx
sub
push 2
push rax
mul
div
out
pop

end
;}/////////////////////////////////////////

;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!